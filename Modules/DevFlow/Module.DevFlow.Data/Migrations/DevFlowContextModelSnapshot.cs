// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module.DevFlow.Data;

#nullable disable

namespace Module.DevFlow.Data.Migrations
{
    [DbContext(typeof(DevFlowContext))]
    partial class DevFlowContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Module.DevFlow.Data.Entities.RepoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RepoLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Repo");
                });

            modelBuilder.Entity("Module.DevFlow.Data.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GithubName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RepoEntityUserEntity", b =>
                {
                    b.Property<int>("RepoEntitiesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserEntitiesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RepoEntitiesId", "UserEntitiesId");

                    b.HasIndex("UserEntitiesId");

                    b.ToTable("RepoEntityUserEntity");
                });

            modelBuilder.Entity("RepoEntityUserEntity", b =>
                {
                    b.HasOne("Module.DevFlow.Data.Entities.RepoEntity", null)
                        .WithMany()
                        .HasForeignKey("RepoEntitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module.DevFlow.Data.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserEntitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
